/**
 * Добавление медиа запроса для компонентов
 */
@mixin media-max($breakpoint) {
    @media (max-width: #{$breakpoint}) {
        @content;
    }
}
@mixin media-min($breakpoint) {
	@media (min-width: #{$breakpoint}) {
		@content
	}
}

/**
 * Добавление высоты и ширины
 */
@mixin size($height, $width) {
	@if $height { height: $height; } 
	@if $width { width: $width; } 
}
@mixin min-size($height, $width) {
	@if $height { min-height: $height; } 
	@if $width { min-width: $width; } 	
}
@mixin max-size ($height, $width) {
	@if $height { max-height: $height; } 
	@if $width { max-width: $width; } 	
}

/**
 * Добавление Flex и определение параметров выравнивания
 */
@mixin flex($direction, $justify, $align) {
	display: flex;
	flex-direction: $direction;
	justify-content: $justify;
	align-items: $align;
}

/**
 * Добавление абсолютного позиционирования и определение расстояний
 */
@mixin absolute($top, $right, $bottom, $left) {
	position: absolute;
	@if $top { top: $top; }
	@if $right { right: $right; }
	@if $bottom { bottom: $bottom; }
	@if $left { left: $left; } 
}

/**
 * Добавление фиксированного позиционирвания
 */
@mixin fixed($top, $right, $bottom, $left) {
	position: fixed;
	@if $top { top: $top; }
	@if $right { right: $right; }
	@if $bottom { bottom: $bottom; }
	@if $left { left: $left; } 	
}

/**
 * Резиновая типографика (ширина)
 */
@function strip-unit($number) {
	@if type-of($number) == 'number' and not unitless($number) {
		@return $number / ($number * 0 + 1);
	}

	@return $number;
}

@function calc-fluid-font-size($f-min, $f-max, $v-min, $v-max, $units: px) {
	$f-min: strip-unit($f-min);
	$f-max: strip-unit($f-max);
	$v-min: strip-unit($v-min);
	$v-max: strip-unit($v-max);

	$k: ($f-max - $f-min) / ($v-max - $v-min);

	$b: $f-min - $k * $v-min;
	$b: $b + $units;

	@return calc(#{$k} * 100vw + #{$b});
}

@mixin fluid-type($f-min, $f-max, $v-min, $v-max, $units) {
	font-size: $f-min;
	@include media-min ($v-min) {
		font-size: calc-fluid-font-size($f-min, $f-max, $v-min, $v-max, $units);
	}
	@include media-min ($v-max) {
		font-size: $f-max;
	}
}

/**
 * Вызов типографики
 * При вызове миксина требуется указывать название размера из $font-sizes
 * В месте вызова требуется подключать _placeholders/typography
 */ 
@mixin typography($size ,$weight) {
	@extend %#{map-get($font-sizes, $size)}
	;
	font-weight: #{map-get($font-weights, $weight)};
}

// Дополнительные настройки типографики
@mixin typography-options($spacing, $line, $transform) {
	@if $spacing { letter-spacing: $spacing; }
	@if $line { line-height: $line; }
	@if $transform { text-transform: $transform; }
}

/**
 * Рамка
 */
@mixin frame($width, $style, $color) {
	border: $width $style $color;
}

/**
 * Касмомная граница
 */ 
@mixin border($side, $width, $style, $color) {
  border-#{$side}: $width $style $color;
}

/**
 * Изображение, помещающееся блок
 */
@mixin img-contain {
	width: 100%;
	height: 100%;
	object-fit: contain;
}
@mixin img-cover {
	width: 100%;
	height: 100%;
	object-fit: cover;
}
